spring.application.name=engly-server

server.port=8000

spring.profiles.active=dev

# Database configuration - Development
spring.datasource.url=jdbc:postgresql://localhost/${DB_NAME}?user=${DB_USER}&password=${DB_PASSWORD}
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=always

# Database connection pool - Development (smaller pool)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=3
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.pool-name=DevHikariCP
spring.datasource.hikari.register-mbeans=true

# Logging - Verbose for development
logging.level.org.springframework.security=debug
logging.level.org.springframework.web=debug
logging.level.org.hibernate.SQL=debug
logging.level.com.engly=debug

# JPA common configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.main.allow-bean-definition-overriding=true

# Security
jwt.rsa-private-key=classpath:certs/privateKey.pem
jwt.rsa-public-key=classpath:certs/publicKey.pem

# OAuth2 - Development
spring.security.oauth2.client.registration.google.client-id=${CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${BASE_URL}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=openid, profile, email

# SMTP configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${ENGLY_EMAIL}
spring.mail.password=${ENGLY_EMAIL_PASSWORD}
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# App notification templates
app.email.notification.subject=EngLy Email verification
app.email.notification.check.url=${BASE_URL}/api/notify/check?email=%s&token=%s
app.email.notification.password-reset.url=${BASE_URL}/password-reset?token=%s

# URLs - Development
app.frontend.url=${FRONTEND_URL}
app.backend-cookie.url=${BACKEND_URL}
app.backend.url=${BASE_URL}

# Admin contacts
sysadmin.email=${SYS_EMAIL}
dev.email=${DEV_EMAIL}

spring.cache.type=caffeine
spring.cache.cache-names=categoryById,categoryByName,allCategories,categoryRequestDto,userProfiles,roomsByCategory,roomById,roomSearchResults,greetings,rooms,allUsers
spring.cache.caffeine.spec=initialCapacity=50,maximumSize=10,expireAfterAccess=300s

#Actuator
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.endpoint.metrics.access=read_only
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.endpoints.web.exposure.include=health,info,prometheus,httptrace,metrics,caches

#Flyway DB
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true